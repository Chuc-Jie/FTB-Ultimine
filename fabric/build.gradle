plugins {
	id "com.github.johnrengelman.shadow" version "5.0.0"
	id "com.matthewprenger.cursegradle" version "1.4.0"
}

def ENV = System.getenv()

configurations {
	shadowCommon
}

loom {
	accessWidener = file("src/main/resources/ftbultimine.accesswidener")
}

architectury {
	platformSetupLoomIde()
	fabric()
}

dependencies {
	modApi "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

	modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
	modApi "me.shedaniel:architectury-fabric:${rootProject.architectury_version}"

	modApi("dev.ftb.mods:ftb-library-fabric:${rootProject.ftb_library_version}") { transitive = false }

	implementation(project(path: ":common")) {
		transitive = false
	}
	developmentFabric(project(path: ":common")) {
		transitive = false
	}
	shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) {
		transitive = false
	}

	modRuntime("curse.maven:lithium-360438:3215441")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

shadowJar {
	configurations = [project.configurations.shadowCommon]
	classifier "dev-shadow"
}

remapJar {
	input.set shadowJar.archiveFile
	dependsOn shadowJar
	archiveBaseName.set "${rootProject.archives_base_name}-${project.name}"
	archiveClassifier.set null
}

jar {
	classifier "dev"
}

java {
	withSourcesJar()
}

sourcesJar {
	def commonSources = project(":common").sourcesJar
	dependsOn commonSources
	from commonSources.archiveFile.map { zipTree(it) }
}

if (ENV.CURSEFORGE_KEY) {
	curseforge {
		apiKey = ENV.CURSEFORGE_KEY
		project {
			id = project.curseforge_id_fabric
			releaseType = project.curseforge_type
			addGameVersion "Fabric"
			addGameVersion "1.16.4"
			addGameVersion "1.16.5"
			mainArtifact(remapJar.archivePath)
			relations {
				requiredDependency 'architectury-fabric'
				requiredDependency 'fabric-api'
				requiredDependency 'ftb-library-fabric'
			}
			changelog = getGitChangelog
			changelogType = 'markdown'
		}
	}
}

publishing {
	publications {
		mavenFabric(MavenPublication) {
			artifactId = "${rootProject.archives_base_name}-${project.name}"
			artifact(remapJar)
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		if (ENV.SAPS_TOKEN) {
			maven {
				url "https://maven.saps.dev/minecraft"
				credentials {
					username = "ftb"
					password = "${ENV.SAPS_TOKEN}"
				}
			}
		}
	}
}

rootProject.tasks.getByName("curseforgePublish").dependsOn tasks.getByName("curseforge")